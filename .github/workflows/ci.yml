name: CI - Build & Push to ECR

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build, Test, and Push Image
    runs-on: ubuntu-latest

    steps:
      # üß∞ Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # ‚òï Step 2: Setup Java
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # ‚öôÔ∏è Step 3: Build app
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      # ‚úÖ Step 4: Run tests
      - name: Run tests
        run: mvn test

      # üê≥ Step 5: Login to AWS ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # üèóÔ∏è Step 6: Build & Push Docker Image
      - name: Build, Tag, and Push Image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # üì¶ Optional: Upload artifact (JAR)
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: springboot-jar
          path: target/*.jar
