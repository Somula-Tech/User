name: CI/CD - Build & Push to ECR and deploy in EKS

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build, Test, and Push Image
    runs-on: ubuntu-latest

    steps:
      # üß∞ Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # ‚òï Step 2: Setup Java
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # ‚öôÔ∏è Step 3: Build app
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      # ‚úÖ Step 4: Run tests
      - name: Run tests
        run: mvn test

      # üê≥ Step 5: Login to AWS ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # üèóÔ∏è Step 6: Build & Push Docker Image
      - name: Build, Tag, and Push Image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      # üß© Step 7: Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # üß© Step 8: Install Helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash    


      # Step 9: Configure kubectl for EKS
      - name: Configure kubectl
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      # Step 10: Deploy with Helm
      - name: Deploy to EKS with Helm
        run: |
          helm upgrade --install user ./helm \
            --namespace default \
            --set image.repository=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }} \
            --set image.tag=latest
  







